name: Deploy

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - 'LICENCE'
      - 'CODEOWNERS'
      - '.gitignore'
      - '.github/workflows/build-pr.yaml'
      - '.github/workflows/manual-deploy-dev.yaml'
      - '.github/workflows/security.yaml'
      - '.github/workflows/alerts.yaml'
      - '.nais/alerts-dev.yaml'
      - '.nais/alerts-prod.yaml'
      - '.github/dependabot.yaml'
env:
  TZ: Europe/Oslo

jobs:
  build:
    permissions:
      contents: "write"
      id-token: "write"
    name: Build/test & push image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
      - uses: gradle/gradle-build-action@v2.9.0
        env: # Eksluder test dependencies
          DEPENDENCY_GRAPH_INCLUDE_CONFIGURATIONS: compileClasspath|runtimeClasspath
        with:
          dependency-graph: generate-and-submit
          arguments: --configuration-cache build shadowJar

      - name: Build docker image
        uses: docker/setup-buildx-action@v3

      - name: Push docker image to Google Artifact Registry
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          byosbom: dependency-graph-reports/deploy-build.json
          team: okonomi
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          tag: latest
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  deploy-dev:
    name: Deploy to dev
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          IMAGE: ${{ needs.build.outputs.image }}
          RESOURCE: .nais/naiserator-dev.yaml
          PRINT_PAYLOAD: true

  deploy-prod:
    name: Deploy to prod
    needs: [ build , deploy-dev ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          IMAGE: ${{ needs.build.outputs.image }}
          RESOURCE: .nais/naiserator-prod.yaml
          PRINT_PAYLOAD: true